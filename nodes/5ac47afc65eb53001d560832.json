{
  "_id": "5ac47afc65eb53001d560832",
  "nodeId": "5ac47ae265eb53001d56081e",
  "type": "react_component:0.0.1:local:98912hd89",
  "data": {
    "version": "14",
    "note": "viewing a node chain, searching, etc.",
    "internalId": "ViewNodeChainComponent",
    "code": "(()=>{\n  return new Promise(async (resolve,reject)=>{\n    try {\n      \n      class ErrorComponent extends React.Component {\n        constructor(props){\n          super(props);\n        }\n        \n        render(){\n          return (\n            <div>\n              [ErrorRenderer]\n            </div>\n          )\n        }\n      }\n      \n      class ViewComponent extends React.Component {\n        constructor(props){\n          super(props);\n          this.state = {\n            showPermissions: false,\n            view: 'Main',\n            recentNodes: []\n          }\n        }\n        \n        componentDidMount(){\n          this.fetchRecentNodes();\n        }\n        componentWillUnmount(){\n        }\n        \n        @autobind\n        async fetchRecentNodes(){\n          \n          console.log('Fetching recent nodes for nodechain');\n          \n          let nodes = await universe.findOnNodeChain({\n            method: 'many',\n            nested: [],\n            chainPubKey: this.props.node.data.pubKey,\n            apiAddress: this.props.node.data.apiAddress\n          });\n          \n          console.log('Nodes from findOnNodeChain:', nodes);\n          \n          this.setState({\n            recentNodes: nodes\n          });\n        }\n        \n        @autobind\n        togglePermissions(){\n          this.setState({\n            showPermissions: !this.state.showPermissions\n          });\n        }\n        \n        renderMain(){\n          return (\n            <div>\n              <br />\n              <br />\n              \n              <button className=\"button is-default\" onClick={e=>this.setState({view:'Publish'})}>Publish to NodeChain</button>\n              <br />\n              <a href=\"/\">Recent Nodes on Chain</a>\n              \n              {\n                this.state.recentNodes.map(node=>(\n                  <div key={node._id}>\n                    ID: {node._id}. NodeType: {node.type}\n                  </div>\n                ))\n              }\n              \n              <br />\n              <br />\n              <br />\n              <br />\n              \n              <br />\n              <a href=\"/\">Template for filtering Nodes on chain </a>\n              <br />\n              <a href=\"/\">Include NodeChain in Collection (group a chain)</a>\n              <br />\n            </div>\n          )\n        }\n        \n        renderPublish(){\n          return (\n            <div>\n            \n              <button className=\"button is-default\" onClick={e=>this.setState({view:'Main'})}>&lt; Back to NodeChain</button>\n              \n              <br />\n              \n              Publishing a new Node\n              \n            </div>\n          )\n          \n        }\n        \n        render(){\n          \n          let node = this.props.node;\n          \n          return (\n            <div className=\"columns\">\n            \n              <div className=\"column\">\n                \n                <div className=\"\">\n                  \n                  {\n                    !node.data.privateKey ? '':\n                    <button className=\"button is-pulled-right\" onClick={this.togglePermissions}>\n                      Permissions\n                    </button>\n                  }\n                \n                  <h2 className=\"title is-4\">\n                    {node.data.username}\n                  </h2>\n                  <h2 className=\"subtitle is-6\">\n                    {node.data.apiAddress}\n                  </h2>\n                  \n                  <p>\n                    A NodeChain is a shared database with a common API. NodeChains can have multiple types of permissions: reading, writing, and across Node's by type or by data attributes. \n                  </p>\n                  \n                  \n                </div>\n                \n                {/* Permissions */}\n                {\n                  !this.state.showPermissions ? '':\n                  <div>\n                    <hr />\n                    \n                    <h2 className=\"title is-5\">\n                      Permissions\n                    </h2>\n                    \n                    [TODO]\n                    \n                    <hr />\n                  </div>\n                }\n                \n                {\n                  this['render'+this.state.view]()\n                }\n                \n                \n              </div>\n              \n            </div>\n          )\n        }\n      }\n      \n      ViewComponent = universe.ReactGlobalState(ViewComponent);\n      \n      resolve({\n        type: 'react_component:0.0.1:local:98912hd89',\n        data: ViewComponent\n      });\n      \n    }catch(err){\n      resolve({\n        ERROR: true, \n        err: err.toString()\n      });\n    }\n    \n  })\n\n  \n})()",
    "key": "c765fe7f-eb8f-4cd5-b2ed-2ab442b3da8f",
    "author": "-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCcuXovU+RZy85KMqLakYSH1mdV\nWdpEUtgcXUyGyU5hVeTO7BkV/kxeC2upcxOwNnrBOdsvHI3nrrILgt90/hCSHKzx\nhOFLREorGoKtSEHxI7/SnzzlWtV3gT/IP5GVHIyvuJBx3hCti0dH55DZG8iMGZ2y\ncGpV73Dez3hHmeBh6wIDAQAB\n-----END PUBLIC KEY-----"
  },
  "active": true,
  "createdAt": 1522825980966,
  "updatedAt": null
}